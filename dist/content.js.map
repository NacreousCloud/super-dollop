{"version":3,"file":"content.js","sources":["../extension/dom-analyzer.ts","../extension/content.ts"],"sourcesContent":["export interface SelectorStrategy {\n  score: number\n  selector: string\n  available: boolean\n}\n\nexport interface DOMNodeData {\n  id: string\n  tag: string\n  role?: string\n  accessibleName?: string\n  attributes: Record<string, string>\n  selectorStrategies: {\n    accessibility: SelectorStrategy\n    name: SelectorStrategy\n    testid: SelectorStrategy\n    css: SelectorStrategy\n  }\n  hasAccessibilityIssues?: boolean\n  labelingImprovements?: string[]\n}\n\nexport interface AccessibilityAnalysis {\n  overallScore: number\n  recommendations: string[]\n  criticalIssues: string[]\n  improvements: string[]\n}\n\nexport class DOMAnalyzer {\n  static analyzeElement(element: Element): DOMNodeData {\n    const tag = element.tagName?.toLowerCase() || 'unknown'\n    const role = this.getRole(element)\n    const accessibleName = this.getAccessibleName(element)\n    const attributes = this.getAttributes(element)\n    \n    const selectorStrategies = this.generateSelectorStrategies(element, role, accessibleName)\n    const analysis = this.analyzeAccessibility(element, role, accessibleName, selectorStrategies)\n    \n    return {\n      id: this.generateId(element),\n      tag,\n      role,\n      accessibleName,\n      attributes,\n      selectorStrategies,\n      hasAccessibilityIssues: analysis.overallScore < 70,\n      labelingImprovements: analysis.improvements\n    }\n  }\n\n  private static getRole(element: Element): string | undefined {\n    // Explicit role attribute\n    const explicitRole = element.getAttribute('role')\n    if (explicitRole) return explicitRole\n\n    // Implicit roles based on tag\n    const tag = element.tagName?.toLowerCase() || 'unknown'\n    const implicitRoles: Record<string, string | undefined> = {\n      'button': 'button',\n      'a': element.hasAttribute('href') ? 'link' : undefined,\n      'input': this.getInputRole(element as HTMLInputElement),\n      'select': 'combobox',\n      'textarea': 'textbox',\n      'main': 'main',\n      'nav': 'navigation',\n      'header': 'banner',\n      'footer': 'contentinfo',\n      'aside': 'complementary',\n      'section': 'region',\n      'article': 'article',\n      'h1': 'heading',\n      'h2': 'heading',\n      'h3': 'heading',\n      'h4': 'heading',\n      'h5': 'heading',\n      'h6': 'heading'\n    }\n\n    return implicitRoles[tag]\n  }\n\n  private static getInputRole(input: HTMLInputElement): string {\n    const type = input.type?.toLowerCase() || 'text'\n    const inputRoles: Record<string, string> = {\n      'button': 'button',\n      'submit': 'button',\n      'reset': 'button',\n      'checkbox': 'checkbox',\n      'radio': 'radio',\n      'range': 'slider',\n      'search': 'searchbox'\n    }\n    return inputRoles[type] || 'textbox'\n  }\n\n  private static getAccessibleName(element: Element): string | undefined {\n    // aria-label\n    const ariaLabel = element.getAttribute('aria-label')\n    if (ariaLabel?.trim()) return ariaLabel.trim()\n\n    // aria-labelledby\n    const labelledBy = element.getAttribute('aria-labelledby')\n    if (labelledBy) {\n      const names = labelledBy.split(/\\s+/)\n        .map(id => document.getElementById(id)?.textContent?.trim())\n        .filter(Boolean)\n        .join(' ')\n      if (names) return names\n    }\n\n    // Associated label\n    if (element.tagName?.toLowerCase() === 'input') {\n      const id = element.getAttribute('id')\n      if (id) {\n        const label = document.querySelector(`label[for=\"${id}\"]`)\n        if (label?.textContent?.trim()) {\n          return label.textContent.trim()\n        }\n      }\n    }\n\n    // Alt text for images\n    if (element.tagName?.toLowerCase() === 'img') {\n      const alt = element.getAttribute('alt')\n      if (alt !== null) return alt // Even empty alt is intentional\n    }\n\n    // Text content for buttons, links, etc.\n    const textContent = element.textContent?.trim()\n    if (textContent && textContent.length < 100) {\n      return textContent\n    }\n\n    return undefined\n  }\n\n  private static getAttributes(element: Element): Record<string, string> {\n    const attrs: Record<string, string> = {}\n    for (let i = 0; i < element.attributes.length; i++) {\n      const attr = element.attributes[i]\n      attrs[attr.name] = attr.value\n    }\n    return attrs\n  }\n\n  private static generateSelectorStrategies(\n    element: Element, \n    role?: string, \n    accessibleName?: string\n  ): DOMNodeData['selectorStrategies'] {\n    const strategies = {\n      accessibility: { score: 0, selector: '', available: false },\n      name: { score: 0, selector: '', available: false },\n      testid: { score: 0, selector: '', available: false },\n      css: { score: 0, selector: '', available: false }\n    }\n\n    // Accessibility strategy (role-based)\n    if (role) {\n      strategies.accessibility = {\n        score: 90,\n        selector: `[role=\"${role}\"]`,\n        available: true\n      }\n    }\n\n    // Name strategy (accessible name)\n    if (accessibleName) {\n      const nameSelector = element.getAttribute('aria-label') \n        ? `[aria-label=\"${accessibleName}\"]`\n        : `[aria-labelledby*=\"${element.getAttribute('aria-labelledby')}\"]`\n      \n      strategies.name = {\n        score: 85,\n        selector: nameSelector,\n        available: true\n      }\n    }\n\n    // Test ID strategy\n    const testId = element.getAttribute('data-testid')\n    if (testId) {\n      strategies.testid = {\n        score: 95,\n        selector: `[data-testid=\"${testId}\"]`,\n        available: true\n      }\n    }\n\n    // CSS strategy (fallback)\n    const cssSelector = this.generateCSSSelector(element)\n    strategies.css = {\n      score: Math.max(30, 70 - cssSelector.split(' ').length * 10), // Penalty for complexity\n      selector: cssSelector,\n      available: true\n    }\n\n    return strategies\n  }\n\n  private static generateCSSSelector(element: Element): string {\n    const parts: string[] = []\n    let current: Element | null = element\n\n    while (current && current.nodeType === Node.ELEMENT_NODE && parts.length < 6) {\n      let selector = current.nodeName?.toLowerCase() || 'unknown'\n\n      // Prefer ID\n      if (current.id) {\n        selector += `#${CSS.escape(current.id)}`\n        parts.unshift(selector)\n        break\n      }\n\n      // Add nth-of-type for uniqueness\n      const siblings = Array.from(current.parentElement?.children || [])\n        .filter(sibling => sibling.nodeName === current!.nodeName)\n      \n      if (siblings.length > 1 && current) {\n        const index = siblings.indexOf(current) + 1\n        selector += `:nth-of-type(${index})`\n      }\n\n      parts.unshift(selector)\n      current = current.parentElement\n    }\n\n    return parts.join(' > ')\n  }\n\n  private static analyzeAccessibility(\n    element: Element,\n    role?: string,\n    accessibleName?: string,\n    strategies?: DOMNodeData['selectorStrategies']\n  ): AccessibilityAnalysis {\n    const issues: string[] = []\n    const improvements: string[] = []\n    let score = 100\n\n    // Check for role\n    if (!role) {\n      issues.push('역할(role)이 명시되지 않음')\n      improvements.push('적절한 role 속성 추가')\n      score -= 20\n    }\n\n    // Check for accessible name\n    if (!accessibleName && this.needsAccessibleName(element)) {\n      issues.push('접근 가능한 이름이 없음')\n      improvements.push('aria-label 또는 연결된 label 추가')\n      score -= 25\n    }\n\n    // Check for test ID\n    if (!element.getAttribute('data-testid')) {\n      improvements.push('data-testid 속성 추가 (테스트 안정성)')\n      score -= 5\n    }\n\n    // Check interactive elements\n    if (this.isInteractive(element)) {\n      const htmlElement = element as HTMLElement\n      if (!element.hasAttribute('tabindex') && htmlElement.tabIndex < 0) {\n        issues.push('키보드 접근이 불가능')\n        improvements.push('tabindex 속성 확인')\n        score -= 15\n      }\n    }\n\n    return {\n      overallScore: Math.max(0, score),\n      recommendations: improvements,\n      criticalIssues: issues.filter(issue => \n        issue.includes('접근 가능한 이름') || issue.includes('키보드 접근')\n      ),\n      improvements\n    }\n  }\n\n  private static needsAccessibleName(element: Element): boolean {\n    const tag = element.tagName?.toLowerCase() || 'unknown'\n    const interactiveTags = ['button', 'a', 'input', 'select', 'textarea']\n    return interactiveTags.includes(tag) || element.hasAttribute('role')\n  }\n\n  private static isInteractive(element: Element): boolean {\n    const tag = element.tagName?.toLowerCase() || 'unknown'\n    const interactiveTags = ['button', 'a', 'input', 'select', 'textarea']\n    return interactiveTags.includes(tag) || \n           element.hasAttribute('onclick') || \n           element.hasAttribute('role') && \n           ['button', 'link', 'menuitem', 'tab'].includes(element.getAttribute('role')!)\n  }\n\n  private static generateId(element: Element): string {\n    return element.getAttribute('data-testid') || \n           element.getAttribute('id') || \n           `${element.tagName?.toLowerCase() || 'unknown'}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n} ","import type { RuntimeMessage } from './types'\nimport { DOMAnalyzer, type DOMNodeData } from './dom-analyzer'\n\ntype StartInspectMsg = { type: 'START_INSPECT' }\ntype StopInspectMsg = { type: 'STOP_INSPECT' }\ntype QueryElementMsg = { type: 'QUERY_ELEMENT'; selector: string }\ntype ClickElementMsg = { type: 'CLICK_ELEMENT'; selector: string }\ntype InputElementMsg = { type: 'INPUT_ELEMENT'; selector: string; value: string }\ntype AssertElementMsg = { type: 'ASSERT_ELEMENT'; selector: string; assertion: any }\n\nlet overlay: HTMLDivElement | null = null\nlet inspecting = false\nlet onMouseMove: ((e: MouseEvent) => void) | null = null\nlet onClickPick: ((e: MouseEvent) => void) | null = null\n\nfunction ensureOverlay() {\n  if (overlay) return overlay\n  overlay = document.createElement('div')\n  overlay.style.position = 'fixed'\n  overlay.style.zIndex = '2147483647'\n  overlay.style.pointerEvents = 'none'\n  overlay.style.border = '2px solid #5b9cff'\n  overlay.style.background = 'rgba(91,156,255,0.15)'\n  overlay.style.borderRadius = '3px'\n  document.documentElement.appendChild(overlay)\n  return overlay\n}\n\nfunction removeOverlay() {\n  overlay?.remove()\n  overlay = null\n}\n\nfunction rectOf(el: Element) {\n  const r = el.getBoundingClientRect()\n  return { left: r.left, top: r.top, width: r.width, height: r.height }\n}\n\nfunction updateOverlay(el: Element) {\n  const box = rectOf(el)\n  const o = ensureOverlay()\n  o.style.left = box.left + 'px'\n  o.style.top = box.top + 'px'\n  o.style.width = Math.max(0, box.width) + 'px'\n  o.style.height = Math.max(0, box.height) + 'px'\n  \n  // Update overlay color based on accessibility score\n  const analysis = DOMAnalyzer.analyzeElement(el)\n  const score = analysis.selectorStrategies.accessibility.score + \n                analysis.selectorStrategies.name.score + \n                analysis.selectorStrategies.testid.score\n  \n  if (score > 180) {\n    o.style.border = '2px solid #10b981' // Green for good accessibility\n    o.style.background = 'rgba(16,185,129,0.15)'\n  } else if (score > 120) {\n    o.style.border = '2px solid #f59e0b' // Yellow for moderate\n    o.style.background = 'rgba(245,158,11,0.15)'\n  } else {\n    o.style.border = '2px solid #ef4444' // Red for poor accessibility\n    o.style.background = 'rgba(239,68,68,0.15)'\n  }\n}\n\nfunction startInspect() {\n  if (inspecting) return\n  inspecting = true\n  ensureOverlay()\n  onMouseMove = (e: MouseEvent) => {\n    const target = e.target as Element | null\n    if (!target) return\n    updateOverlay(target as Element)\n  }\n  onClickPick = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    const target = e.target as Element | null\n    if (!target) return\n    \n    // Use the new DOMAnalyzer for comprehensive analysis\n    const analysis = DOMAnalyzer.analyzeElement(target)\n    \n    // Send the detailed analysis data\n    chrome.runtime.sendMessage({ \n      type: 'ELEMENT_PICKED', \n      payload: {\n        // Keep backward compatibility with existing interface\n        role: analysis.role,\n        name: analysis.accessibleName,\n        selector: analysis.selectorStrategies.css.selector,\n        // Add new detailed analysis\n        detailedAnalysis: analysis\n      }\n    })\n    stopInspect()\n  }\n  window.addEventListener('mousemove', onMouseMove, true)\n  window.addEventListener('click', onClickPick, true)\n  document.body.style.cursor = 'crosshair'\n}\n\nfunction stopInspect() {\n  if (!inspecting) return\n  inspecting = false\n  window.removeEventListener('mousemove', onMouseMove as any, true)\n  window.removeEventListener('click', onClickPick as any, true)\n  onMouseMove = null\n  onClickPick = null\n  document.body.style.cursor = ''\n  removeOverlay()\n}\n\nchrome.runtime.onMessage.addListener((msg: RuntimeMessage, _sender, sendResponse) => {\n  if (msg.type === 'START_INSPECT') {\n    startInspect()\n    sendResponse({ ok: true })\n  }\n  else if (msg.type === 'STOP_INSPECT') {\n    stopInspect()\n    sendResponse({ ok: true })\n  }\n  else if (msg.type === 'PING') {\n    sendResponse({ ok: true })\n  }\n  else if (msg.type === 'QUERY_ELEMENT') {\n    const { selector } = msg as QueryElementMsg\n    try {\n      const element = document.querySelector(selector)\n      if (element) {\n        sendResponse({ \n          ok: true, \n          found: true, \n          element: {\n            tagName: element.tagName?.toLowerCase() || 'unknown',\n            textContent: element.textContent?.trim() || '',\n            value: (element as HTMLInputElement).value || '',\n            attributes: Array.from(element.attributes).map(attr => ({\n              name: attr.name,\n              value: attr.value\n            }))\n          }\n        })\n      } else {\n        sendResponse({ ok: true, found: false })\n      }\n    } catch (error) {\n      sendResponse({ \n        ok: false, \n        error: error instanceof Error ? error.message : String(error) \n      })\n    }\n  }\n  else if (msg.type === 'CLICK_ELEMENT') {\n    const { selector } = msg as ClickElementMsg\n    try {\n      const element = document.querySelector(selector) as HTMLElement\n      if (element) {\n        element.click()\n        sendResponse({ ok: true, clicked: true })\n      } else {\n        sendResponse({ ok: false, error: '요소를 찾을 수 없습니다' })\n      }\n    } catch (error) {\n      sendResponse({ \n        ok: false, \n        error: error instanceof Error ? error.message : String(error) \n      })\n    }\n  }\n  else if (msg.type === 'INPUT_ELEMENT') {\n    const { selector, value } = msg as InputElementMsg\n    try {\n      const element = document.querySelector(selector) as HTMLInputElement\n      if (element) {\n        element.value = value\n        element.dispatchEvent(new Event('input', { bubbles: true }))\n        element.dispatchEvent(new Event('change', { bubbles: true }))\n        sendResponse({ ok: true, inputted: true })\n      } else {\n        sendResponse({ ok: false, error: '요소를 찾을 수 없습니다' })\n      }\n    } catch (error) {\n      sendResponse({ \n        ok: false, \n        error: error instanceof Error ? error.message : String(error) \n      })\n    }\n  }\n  else if (msg.type === 'ASSERT_ELEMENT') {\n    const { selector, assertion } = msg as AssertElementMsg\n    try {\n      const element = document.querySelector(selector)\n      if (!element) {\n        sendResponse({ \n          ok: true, \n          success: false, \n          message: '요소를 찾을 수 없습니다',\n          actual: null\n        })\n        return\n      }\n\n      let success = false\n      let message = ''\n      let actual: any = null\n\n      switch (assertion.type) {\n        case 'element_exists':\n          success = true\n          message = '요소가 존재합니다'\n          actual = true\n          break\n        case 'text_equals':\n          const text = element.textContent?.trim() || ''\n          actual = text\n          success = text === assertion.expected\n          message = success ? '텍스트가 일치합니다' : `텍스트가 일치하지 않습니다. 예상: \"${assertion.expected}\", 실제: \"${text}\"`\n          break\n        case 'text_contains':\n          const content = element.textContent?.trim() || ''\n          actual = content\n          success = content.includes(assertion.expected)\n          message = success ? '텍스트를 포함합니다' : `텍스트를 포함하지 않습니다. 예상: \"${assertion.expected}\", 실제: \"${content}\"`\n          break\n        case 'value_equals':\n          const value = (element as HTMLInputElement).value || ''\n          actual = value\n          success = value === assertion.expected\n          message = success ? '값이 일치합니다' : `값이 일치하지 않습니다. 예상: \"${assertion.expected}\", 실제: \"${value}\"`\n          break\n        case 'attribute_equals':\n          const attrValue = element.getAttribute(assertion.attribute || '') || ''\n          actual = attrValue\n          success = attrValue === assertion.expected\n          message = success ? '속성이 일치합니다' : `속성이 일치하지 않습니다. 예상: \"${assertion.expected}\", 실제: \"${attrValue}\"`\n          break\n               case 'visible':\n         const isVisible = (element as HTMLElement).offsetWidth > 0 && (element as HTMLElement).offsetHeight > 0 && \n                          window.getComputedStyle(element).visibility !== 'hidden' &&\n                          window.getComputedStyle(element).display !== 'none'\n          actual = isVisible\n          success = isVisible === assertion.expected\n          message = success ? '가시성이 일치합니다' : `가시성이 일치하지 않습니다. 예상: ${assertion.expected}, 실제: ${isVisible}`\n          break\n        default:\n          success = false\n          message = `지원하지 않는 검증 타입: ${assertion.type}`\n          actual = null\n      }\n\n      sendResponse({ \n        ok: true, \n        success, \n        message, \n        actual \n      })\n    } catch (error) {\n      sendResponse({ \n        ok: false, \n        error: error instanceof Error ? error.message : String(error) \n      })\n    }\n  }\n  \n  return true // 비동기 응답을 위해 true 반환\n}) "],"names":["DOMAnalyzer","element","_a","tag","role","accessibleName","attributes","selectorStrategies","analysis","explicitRole","input","type","_b","_c","_d","ariaLabel","labelledBy","names","id","label","alt","textContent","attrs","i","attr","strategies","nameSelector","testId","cssSelector","parts","current","selector","siblings","sibling","index","issues","improvements","score","htmlElement","issue","overlay","inspecting","onMouseMove","onClickPick","ensureOverlay","removeOverlay","rectOf","el","r","updateOverlay","box","o","startInspect","e","target","stopInspect","msg","_sender","sendResponse","error","value","assertion","success","message","actual","text","content","attrValue","isVisible"],"mappings":"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"}